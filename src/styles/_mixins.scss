// =============================================================================
// SCSS MIXINS - Reusable style patterns with BEM methodology
// =============================================================================

// =============================================================================
// RESPONSIVE BREAKPOINTS
// =============================================================================

@mixin mobile-only {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: #{$breakpoint-sm}) {
    @content;
  }
}

@mixin tablet-only {
  @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

@mixin desktop-only {
  @media (min-width: #{$breakpoint-lg}) and (max-width: #{$breakpoint-xl - 1px}) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: #{$breakpoint-xl}) {
    @content;
  }
}

@mixin custom-breakpoint($min: null, $max: null) {
  @if $min and $max {
    @media (min-width: #{$min}) and (max-width: #{$max - 1px}) {
      @content;
    }
  } @else if $min {
    @media (min-width: #{$min}) {
      @content;
    }
  } @else if $max {
    @media (max-width: #{$max - 1px}) {
      @content;
    }
  }
}

// =============================================================================
// LAYOUT MIXINS
// =============================================================================

@mixin container($max-width: $container-xl, $padding: $spacing-lg) {
  max-width: $max-width;
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
  width: 100%;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin sticky-header($z-index: $z-sticky) {
  position: sticky;
  top: 0;
  z-index: $z-index;
  background-color: var(--color-background);
  border-bottom: 1px solid var(--color-border);
}

// =============================================================================
// TYPOGRAPHY MIXINS
// =============================================================================

@mixin font-size($size, $line-height: null) {
  font-size: $size;
  @if $line-height {
    line-height: $line-height;
  }
}

@mixin heading($level: 1) {
  font-weight: $font-weight-bold;
  color: var(--color-text-primary);
  line-height: $line-height-tight;
  
  @if $level == 1 {
    font-size: $font-size-4xl;
    @include tablet-up {
      font-size: $font-size-5xl;
    }
  } @else if $level == 2 {
    font-size: $font-size-3xl;
    @include tablet-up {
      font-size: $font-size-4xl;
    }
  } @else if $level == 3 {
    font-size: $font-size-2xl;
    @include tablet-up {
      font-size: $font-size-3xl;
    }
  } @else if $level == 4 {
    font-size: $font-size-xl;
    @include tablet-up {
      font-size: $font-size-2xl;
    }
  } @else if $level == 5 {
    font-size: $font-size-lg;
    @include tablet-up {
      font-size: $font-size-xl;
    }
  } @else if $level == 6 {
    font-size: $font-size-base;
    @include tablet-up {
      font-size: $font-size-lg;
    }
  }
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// =============================================================================
// BUTTON MIXINS
// =============================================================================

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-sm;
  font-family: inherit;
  font-weight: $font-weight-medium;
  text-decoration: none;
  border: 1px solid transparent;
  border-radius: $border-radius-md;
  cursor: pointer;
  transition: $transition-all;
  white-space: nowrap;
  user-select: none;
  position: relative;
  overflow: hidden;
  
  &:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
    pointer-events: none;
  }
}

@mixin button-size($size: 'md') {
  @if $size == 'sm' {
    padding: $spacing-sm $spacing-md;
    font-size: $font-size-sm;
    height: $button-height-sm;
  } @else if $size == 'lg' {
    padding: $spacing-lg $spacing-xl;
    font-size: $font-size-lg;
    height: $button-height-lg;
  } @else if $size == 'xl' {
    padding: $spacing-xl $spacing-2xl;
    font-size: $font-size-xl;
    height: $button-height-xl;
  } @else {
    padding: $spacing-md $spacing-lg;
    font-size: $font-size-base;
    height: $button-height-md;
  }
}

@mixin button-variant($bg-color, $text-color, $border-color: $bg-color, $hover-bg: null, $hover-border: null) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $border-color;
  
  $hover-bg-color: if($hover-bg, $hover-bg, darken($bg-color, 10%));
  $hover-border-color: if($hover-border, $hover-border, darken($border-color, 10%));
  
  &:hover:not(:disabled) {
    background-color: $hover-bg-color;
    border-color: $hover-border-color;
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: $shadow-sm;
  }
}

// =============================================================================
// FORM MIXINS
// =============================================================================

@mixin input-base {
  width: 100%;
  font-family: inherit;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  color: var(--color-text-primary);
  background-color: var(--color-white);
  border: 1px solid var(--color-border);
  border-radius: $border-radius-md;
  padding: $spacing-md $spacing-lg;
  transition: $transition-all;
  appearance: none;
  
  &::placeholder {
    color: var(--color-text-muted);
    opacity: 1;
  }
  
  &:hover:not(:disabled):not(:focus) {
    border-color: var(--color-gray-300);
  }
  
  &:focus {
    outline: none;
    border-color: var(--color-border-focus);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
  
  &:disabled {
    background-color: var(--color-gray-100);
    color: var(--color-text-muted);
    cursor: not-allowed;
    opacity: 0.6;
  }
}

@mixin input-state($color) {
  border-color: $color;
  
  &:focus {
    border-color: $color;
    box-shadow: 0 0 0 3px rgba($color, 0.1);
  }
}

@mixin form-group {
  display: flex;
  flex-direction: column;
  gap: $spacing-sm;
  margin-bottom: $spacing-lg;
  
  &:last-child {
    margin-bottom: 0;
  }
}

@mixin label-base {
  display: inline-flex;
  align-items: center;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  color: var(--color-text-primary);
  line-height: $line-height-normal;
  margin-bottom: $spacing-xs;
  cursor: pointer;
  user-select: none;
}

// =============================================================================
// CARD MIXINS
// =============================================================================

@mixin card-base {
  background-color: var(--color-white);
  border: 1px solid var(--color-border);
  border-radius: $card-border-radius;
  box-shadow: $card-shadow;
  overflow: hidden;
}

@mixin card-padding($padding: $card-padding) {
  padding: $padding;
}

@mixin card-hover {
  transition: $transition-all;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// =============================================================================
// ANIMATION MIXINS
// =============================================================================

@mixin fade-in($duration: $duration-normal) {
  animation: fadeIn $duration $ease-out;
}

@mixin slide-in-up($duration: $duration-normal) {
  animation: slideInUp $duration $ease-out;
}

@mixin slide-in-down($duration: $duration-normal) {
  animation: slideInDown $duration $ease-out;
}

@mixin loading-spinner($size: 1rem, $color: var(--color-primary)) {
  display: inline-block;
  width: $size;
  height: $size;
  border: 2px solid var(--color-gray-300);
  border-radius: 50%;
  border-top-color: $color;
  animation: spin 1s ease-in-out infinite;
}

@mixin skeleton($height: 1rem, $border-radius: $border-radius-sm) {
  background: linear-gradient(90deg, var(--color-gray-200) 25%, var(--color-gray-100) 50%, var(--color-gray-200) 75%);
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
  border-radius: $border-radius;
  height: $height;
}

// =============================================================================
// UTILITY MIXINS
// =============================================================================

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &::before {
    content: "";
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

@mixin focus-ring($color: var(--color-primary), $offset: 2px) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: $offset;
  }
}

@mixin hover-lift($distance: 2px, $shadow: $shadow-md) {
  transition: $transition-all;
  
  &:hover {
    transform: translateY(-$distance);
    box-shadow: $shadow;
  }
}

// =============================================================================
// BEM HELPER MIXINS
// =============================================================================

@mixin element($element) {
  &__#{$element} {
    @content;
  }
}

@mixin modifier($modifier) {
  &--#{$modifier} {
    @content;
  }
}

@mixin when($state) {
  &.is-#{$state} {
    @content;
  }
}

// Usage example:
// .button {
//   @include button-base;
//   
//   @include element('icon') {
//     margin-right: $spacing-xs;
//   }
//   
//   @include modifier('primary') {
//     @include button-variant($color-primary, $color-white);
//   }
//   
//   @include when('loading') {
//     pointer-events: none;
//   }
// }

// =============================================================================
// DARK MODE MIXINS
// =============================================================================

@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

@mixin light-mode {
  @media (prefers-color-scheme: light) {
    @content;
  }
}

// =============================================================================
// ACCESSIBILITY MIXINS
// =============================================================================

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

@mixin focus-visible {
  &:focus-visible {
    @content;
  }
}

// =============================================================================
// PRINT MIXINS
// =============================================================================

@mixin print-only {
  @media print {
    @content;
  }
}

@mixin screen-only {
  @media screen {
    @content;
  }
}